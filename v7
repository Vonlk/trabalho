import tkinter as tk

def submit_info():
    name = entry_name.get()
    cpf = entry_cpf.get()
    state = selected_state.get()
    employment_type = selected_employment_type.get()

    if not validate_cpf(cpf):
        label_result.config(text="CPF inválido. Por favor, insira um CPF válido.")
        return

    if state not in estados:
        label_result.config(text="Estado inválido. Por favor, selecione um estado válido.")
        return

    label_result.config(text="Nome: " + name + "\nCPF: " + cpf + "\nEstado: " + state + "\nTipo de Vínculo: " + employment_type)

def validate_cpf(cpf):
    # Implementação da validação do CPF (método anterior)

def ler_estados():
    with open("estados.txt", "r") as file:
        estados = file.read().strip().split(";")
    return estados

estados = ler_estados()

janela = tk.Tk()
janela.title("Informe seus dados")
janela.geometry("400x350")

label_nome = tk.Label(janela, text="Nome:")
label_nome.pack()

entry_name = tk.Entry(janela)
entry_name.pack()

label_cpf = tk.Label(janela, text="CPF:")
label_cpf.pack()

entry_cpf = tk.Entry(janela)
entry_cpf.pack()

label_estado = tk.Label(janela, text="Estado:")
label_estado.pack()

selected_state = tk.StringVar(janela)
selected_state.set(estados[0])

state_dropdown = tk.OptionMenu(janela, selected_state, *estados)
state_dropdown.pack()

label_tipo_vinculo = tk.Label(janela, text="Tipo de Vínculo:")
label_tipo_vinculo.pack()

selected_employment_type = tk.StringVar(janela)
selected_employment_type.set(tipos_vinculo[0])

employment_type_dropdown = tk.OptionMenu(janela, selected_employment_type, *tipos_vinculo)
employment_type_dropdown.pack()

button_submit = tk.Button(janela, text="Enviar", command=submit_info)
button_submit.pack()

label_result = tk.Label(janela, text="")
label_result.pack()

janela.mainloop()
